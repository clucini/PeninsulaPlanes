data <- read.csv('log.csv')
head(data)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dyplr")
install.packages("dylpr")
library(dplyr)
head(data)
data <- read.csv("log.csv")
head(Data)
head(data)
table(data[2])
table(data[0])
table(data[1])
table(data[2])
library(leaflet)
data$Transmission.Type
table(data$Transmission.Type)
hist(data$Transmission.Type)
shiny::runApp()
runApp()
runApp()
head(data)
data[10]
data.row(10)
data[,10]
data[10,]
data[9,]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinydashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
source('app.R')
runApp()
runApp()
runApp()
head(data)
View(data)
View(subset(data, Transmission.Type = 3))
dim(subset(data, Transmission.Type = 3))
View(data)
View(data)
dim(subset(data, Transmission.Type = 3))
View(subset(data, Transmission.Type = 3)
)
library(dplyr)
filter(data, Transmission.Type = 3)
filter(data, Transmission.Type == 3)
table(filter(data, Transmission.Type == 3)$HexIdnet)
install.packages("tidyverse")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filter(data, Transmission.Type == 3)
raw_data
runApp()
filter(data, Transmission.Type == 3 )
filter(raw_data, Transmission.Type == 3, select_all())
filter(data, Transmission.Type == 3, select_all())
filter(data, Transmission.Type == 3, select_all(data))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
type(data$Transmission.Type)
class(data$Transmission.Type)
runApp()
runApp()
runApp()
runApp()
runApp()
filter(data, Transmission.Type == 3)
filter(data, Transmission.Type == 3, HexIdnet == "7C6D9D")
filter(data, Transmission.Type == 3, HexIdnet == "7C5C50")
runApp()
runApp()
runApp()
shiny::runApp()
head(data)
runApp()
runApp()
x <- c(2:8,4:10)
x
unique(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(data)
runApp()
View(PlanesData)
View(PlanesData)
View(data)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
head(Data)
head(data)
runApp()
runApp()
runApp()
rm(list=ls())
runApp()
rm(list=ls())
shiny::runApp()
runApp()
runApp()
runApp()
View(PlaneData)
View(PlaneData)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
for(i in unique(PlaneData$HexIdnet))
{
m <- m %>%
addPolylines(PlaneData[PlaneData$HexIdnet == i],
lng = Longitude,
lat = Latitude)
}
for(i in unique(PlaneData$HexIdnet))
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
View(m)
rm(list=ls())
runApp()
runApp()
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
rm(list=ls())
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(initdata)
runApp()
runApp()
runApp()
View(raw_data)
unique(raw_data$HexIdnet)
View(initdata)
View(raw_data)
runApp()
colnames(raw_data)
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
View(initdata)
runApp()
View(raw_data)
View(initdata)
colnames(raw_data)
colnames(initdata)
runApp()
runApp()
runApp()
initdata %>% renameall(colnames(raw_data))
library(dplyr)
initdata %>% renameall(colnames(raw_data))
initdata %>% rename_all(colnames(raw_data))
initdata %>% rename_all(colnames(raw_data)) %>% head
initdata %>% rename_all(c(colnames(raw_data))) %>% head
initdata %>% rename_all(funs(colnames(raw_data))) %>% head
View(initdata)
runApp()
View(initdata)
runApp()
View(raw_data)
unqiue(raw_data)
unqiue(raw_data$HexIdnet)
unuque(raw_data$HexIdnet)
unique(raw_data$HexIdnet)
levels(raw_data$HexIdnet)
runApp()
rm(list=ls())
runApp()
runApp()
unique(com_data$HexIdnet)
rm(list=c("com_data","raw_data"))
runApp()
runApp()
View(raw_data)
levels(raw_data)
unique(raw_dat)
unique(raw_data)
levels(raw_data$HexIdnet)
levels(com_data)
levels(com_data$HexIdnet)
runApp()
levels(PlaneData)
levels(PlaneData$HexIdnet)
table(raw_data)
table(raw_data$AircraftID)
table(raw_data$Transmission.Type)
table(com_data$Transmission.Type)
table(com_data$HexIdnet)
runApp()
rm("com_data"
)
runApp()
View(initdata)
runApp()
View(initdata)
View(initdata)
rm(list=ls())
library(data.table)
runApp()
runApp()
runApp()
View(com_data)
setNames ?
? setNames
com_data %>% rename_all(colnames(initdata))
com_data %>% rename_all(funs=colnames(initdata))
com_data %>% rename_all(funs(colnames(initdata)))
View(com_data)
View(com_data)
com_data <- com_data %>% rename_all(funs(colnames(initdata)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dbconnection <- odbcDriverConnect("Driver=SQL Server Native Client 11.0;Server=192.168.11.34;Database=fdata;Uid=fdata;Pwd=eagleone")
initdata <<- sqlQuery(dbconnection,paste("select * from ds1;"))
odbcCloseAll()
raw_data <- read.csv("log.csv")
initdata <- initdata %>% rename_all(funs(colnames(raw_data)))
com_data <- rbind(raw_data, initdata, na.rm=TRUE)
PlaneData <<- filter(com_data, Transmission.Type == 3)
PlaneData <<- arrange(PlaneData, HexIdnet)
warnings()
raw_data <- read.csv("log.csv")
initdata <- initdata %>% rename_all(funs(colnames(raw_data)))
com_data <- rbind(raw_data, initdata, na.rm=FALSE)
PlaneData <<- filter(com_data, Transmission.Type == 3)
PlaneData <<- arrange(PlaneData, HexIdnet)
warnings()
rm(list=ls())
dbconnection <- odbcDriverConnect("Driver=SQL Server Native Client 11.0;Server=192.168.11.34;Database=fdata;Uid=fdata;Pwd=eagleone")
initdata <<- sqlQuery(dbconnection,paste("select * from ds1;"))
odbcCloseAll()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
raw_data <- read.csv("log.csv")
initdata <- initdata %>% rename_all(funs(colnames(raw_data)))
com_data <- rbind(raw_data, initdata, na.rm=FALSE)
PlaneData <<- filter(com_data, Transmission.Type == 3)
PlaneData <<- arrange(PlaneData, HexIdnet)
View(com_data)
rm("com_data")
rm("raw_data")
runApp()
View(PlaneData)
raw_data <- read.csv("log.csv")
initdata <- initdata %>% rename_all(funs(colnames(raw_data)))
com_data <- rbind(raw_data, initdata, na.rm=FALSE)
PlaneData <<- filter(com_data, Transmission.Type == 3)
PlaneData <<- arrange(PlaneData, HexIdnet)
runApp()
runApp()
runApp()
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
dbconnection <- odbcDriverConnect("Driver=SQL Server Native Client 11.0;Server=192.168.11.34;Database=fdata;Uid=fdata;Pwd=eagleone")
initdata <<- sqlQuery(dbconnection,paste("select * from ds1;"))
odbcCloseAll()
runApp()
