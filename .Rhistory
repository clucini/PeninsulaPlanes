data <- read.csv('log.csv')
head(data)
install.packages(dplyr)
install.packages("dplyr")
install.packages("dyplr")
install.packages("dylpr")
library(dplyr)
head(data)
data <- read.csv("log.csv")
head(Data)
head(data)
table(data[2])
table(data[0])
table(data[1])
table(data[2])
library(leaflet)
data$Transmission.Type
table(data$Transmission.Type)
hist(data$Transmission.Type)
shiny::runApp()
runApp()
runApp()
head(data)
data[10]
data.row(10)
data[,10]
data[10,]
data[9,]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinydashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
source('app.R')
runApp()
runApp()
runApp()
head(data)
View(data)
View(subset(data, Transmission.Type = 3))
dim(subset(data, Transmission.Type = 3))
View(data)
View(data)
dim(subset(data, Transmission.Type = 3))
View(subset(data, Transmission.Type = 3)
)
library(dplyr)
filter(data, Transmission.Type = 3)
filter(data, Transmission.Type == 3)
table(filter(data, Transmission.Type == 3)$HexIdnet)
install.packages("tidyverse")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
filter(data, Transmission.Type == 3)
raw_data
runApp()
filter(data, Transmission.Type == 3 )
filter(raw_data, Transmission.Type == 3, select_all())
filter(data, Transmission.Type == 3, select_all())
filter(data, Transmission.Type == 3, select_all(data))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
type(data$Transmission.Type)
class(data$Transmission.Type)
runApp()
runApp()
runApp()
runApp()
runApp()
filter(data, Transmission.Type == 3)
filter(data, Transmission.Type == 3, HexIdnet == "7C6D9D")
filter(data, Transmission.Type == 3, HexIdnet == "7C5C50")
runApp()
runApp()
runApp()
shiny::runApp()
head(data)
runApp()
runApp()
x <- c(2:8,4:10)
x
unique(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(data)
runApp()
View(PlanesData)
View(PlanesData)
View(data)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
head(Data)
head(data)
runApp()
runApp()
runApp()
rm(list=ls())
runApp()
rm(list=ls())
shiny::runApp()
runApp()
runApp()
runApp()
View(PlaneData)
View(PlaneData)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
for(i in unique(PlaneData$HexIdnet))
{
m <- m %>%
addPolylines(PlaneData[PlaneData$HexIdnet == i],
lng = Longitude,
lat = Latitude)
}
for(i in unique(PlaneData$HexIdnet))
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
View(m)
rm(list=ls())
runApp()
runApp()
runApp()
rm(list=ls())
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
